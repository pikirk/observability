name: observability-dashboard-newrelic
run-name: Dashboard build - ${{ github.actor }}
on: [push]

# values set in Set Build Metadata step   
env:
  NOW: ''
  SHORT_SHA: ''
  PUBLISHED_ARTIFACT_NAME: ''

jobs:
  build-dashboard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Set Build Metadata
        run: |
          sha=${{ github.sha }}
          artifact='laundary_dash.tfplan'
          echo "NOW=$(date +'%Y%m%d%H%M%S%3N')" >> $GITHUB_ENV
          echo "SHORT_SHA=$(echo $sha | cut -c 1-5)" >> $GITHUB_ENV
          echo "PUBLISHED_ARTIFACT_NAME=$(echo $NOW-$SHORT_SHA_$artifact)" >> $GITHUB_ENV
          echo "NOW=$NOW"
          echo "SHA=$SHORT_SHA"
          echo "ARTIFACT=$PUBLISHED_ARTIFACT_NAME"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Lint
        uses: dflook/terraform-fmt-check@v1
        id: tf-lint-result
        with:
          path: ${{ github.workspace }}/terraform/stacks/

      - name: Check Lint Result
        if: ${{ failure() && steps.tf-lint-result.outputs.failure-reason == 'check-failed' }}
        run: | 
          echo "Terraform formatting check failed"
          exit 1

      - name: Setup Terraform Workspace
        run: |
          cd ${{ github.workspace }}/terraform/stacks/dash-endpoints/
          terraform version
          terraform init
          terraform workspace new prod
          terraform workspace select prod
          terraform workspace list

      - name: Terraform Plan
        run: |
          cd ${{ github.workspace }}/terraform/stacks/dash-endpoints/
          terraform plan \
            -var-file=./configurations/prod.tfvars \
            -out=${{ env.PUBLISHED_ARTIFACT_NAME }}
          exit $?
        env:
          TF_VAR_TF_NR_ACCOUNT: ${{ secrets.TF_NR_ACCOUNT }}
          TF_VAR_TF_NR_API_KEY: ${{ secrets.TF_NR_API_KEY }}

      - name: Push Artifacts
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.NOW }}-${{ env.SHORT_SHA }}-laundry-dash
          path: ${{ github.workspace }}/terraform/stacks/dash-endpoints/${{ env.PUBLISHED_ARTIFACT_NAME }}

  deploy-dashboard:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: build-dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2  

      - name: Setup Terraform Workspace
        run: |
          cd ${{ github.workspace }}/terraform/stacks/dash-endpoints/
          terraform version
          terraform init
          terraform workspace new prod
          terraform workspace select prod
          terraform workspace list

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.NOW }}-${{ env.SHORT_SHA }}-laundry-dash
          path: ${{ github.workspace }}/terraform/stacks/dash-endpoints/

      - name: Deploy
        run: |
          ls -1
          cd ${{ github.workspace }}/terraform/stacks/dash-endpoints/
          terraform apply ${{ env.PUBLISHED_ARTIFACT_NAME }}
          exit $?
